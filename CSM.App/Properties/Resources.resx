<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About_Development" xml:space="preserve">
    <value>Development</value>
  </data>
  <data name="About_Icon" xml:space="preserve">
    <value>Icon</value>
  </data>
  <data name="About_Idea" xml:space="preserve">
    <value>Idea</value>
  </data>
  <data name="About_Testing" xml:space="preserve">
    <value>Testing</value>
  </data>
  <data name="CustomLevels_Detail_NoData" xml:space="preserve">
    <value>No custom level selected</value>
  </data>
  <data name="MainWindow_Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Playlists_Author" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="Playlists_AvailableCustomLevels_Title" xml:space="preserve">
    <value>Available Custom Levels / Beat Saber Favorites / Song Search</value>
  </data>
  <data name="Playlists_Delete" xml:space="preserve">
    <value>Deletes the selected playlist / folder</value>
  </data>
  <data name="Playlists_Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Playlists_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Playlists_Refresh" xml:space="preserve">
    <value>Refresh the playlists</value>
  </data>
  <data name="Playlist_Detail_NoData" xml:space="preserve">
    <value>No song selected</value>
  </data>
  <data name="Playlist_NoData" xml:space="preserve">
    <value>No playlist selected</value>
  </data>
  <data name="Playlist_Title" xml:space="preserve">
    <value>Playlist</value>
  </data>
  <data name="Settings_BeatSaber_CustomLevelsPath" xml:space="preserve">
    <value>Custom Levels Path</value>
  </data>
  <data name="Settings_BeatSaber_InstallPath" xml:space="preserve">
    <value>Beat Saber Install Path</value>
  </data>
  <data name="Settings_BeatSaber_PlaylistsPath" xml:space="preserve">
    <value>Playlists Path</value>
  </data>
  <data name="Settings_BeatSaber_Title" xml:space="preserve">
    <value>Beat Saber</value>
  </data>
  <data name="Settings_Close" xml:space="preserve">
    <value>Closes Settings</value>
  </data>
  <data name="Settings_Title" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Settings_Workspaces_Default" xml:space="preserve">
    <value>Default Workspace</value>
  </data>
  <data name="Settings_Workspaces_Title" xml:space="preserve">
    <value>Workspaces</value>
  </data>
  <data name="Settings_Workspace_CustomLevels" xml:space="preserve">
    <value>Custom Levels</value>
  </data>
  <data name="Settings_Workspace_SongDetailPosition" xml:space="preserve">
    <value>Song Detail Position</value>
  </data>
  <data name="SongSearch_Search_ClearFilter" xml:space="preserve">
    <value>Clears all filters</value>
  </data>
  <data name="SongSearch_Search_Enhanced" xml:space="preserve">
    <value>Enhanced Search</value>
  </data>
  <data name="SongSearch_Search_General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="SongSearch_Search_General_AI" xml:space="preserve">
    <value>AI</value>
  </data>
  <data name="SongSearch_Search_General_Curated" xml:space="preserve">
    <value>Curated</value>
  </data>
  <data name="SongSearch_Search_General_FullSpread" xml:space="preserve">
    <value>Full Spread</value>
  </data>
  <data name="SongSearch_Search_General_Ranked" xml:space="preserve">
    <value>Ranked</value>
  </data>
  <data name="SongSearch_Search_General_Verified" xml:space="preserve">
    <value>Verified Mapper</value>
  </data>
  <data name="SongSearch_Search_Relevance" xml:space="preserve">
    <value>Relevance</value>
  </data>
  <data name="SongSearch_Search_Relevance_Curated" xml:space="preserve">
    <value>Curated</value>
  </data>
  <data name="SongSearch_Search_Relevance_Latest" xml:space="preserve">
    <value>Latest</value>
  </data>
  <data name="SongSearch_Search_Relevance_Rating" xml:space="preserve">
    <value>Rating</value>
  </data>
  <data name="SongSearch_Search_Relevance_Relevance" xml:space="preserve">
    <value>Relevance</value>
  </data>
  <data name="SongSearch_Search_Requirements" xml:space="preserve">
    <value>Requirements</value>
  </data>
  <data name="SongSearch_Search_Requirements_Chroma" xml:space="preserve">
    <value>Chroma</value>
  </data>
  <data name="SongSearch_Search_Requirements_Cinema" xml:space="preserve">
    <value>Cinema</value>
  </data>
  <data name="SongSearch_Search_Requirements_ME" xml:space="preserve">
    <value>Mapping Extensions</value>
  </data>
  <data name="SongSearch_Search_Requirements_Noodle" xml:space="preserve">
    <value>Noodle</value>
  </data>
  <data name="SongSearch_Search_Tags_MapStyle" xml:space="preserve">
    <value>Tags (Map-Style)</value>
  </data>
  <data name="SongSearch_Search_Tags_MapStyle_Accuracy" xml:space="preserve">
    <value>Accuracy</value>
  </data>
  <data name="SongSearch_Search_Tags_MapStyle_Balanced" xml:space="preserve">
    <value>Balanced</value>
  </data>
  <data name="SongSearch_Search_Tags_MapStyle_Challenge" xml:space="preserve">
    <value>Challenge</value>
  </data>
  <data name="SongSearch_Search_Tags_MapStyle_Dance" xml:space="preserve">
    <value>Dance</value>
  </data>
  <data name="SongSearch_Search_Tags_MapStyle_Fitness" xml:space="preserve">
    <value>Fitness</value>
  </data>
  <data name="SongSearch_Search_Tags_MapStyle_None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="SongSearch_Search_Tags_MapStyle_Speed" xml:space="preserve">
    <value>Speed</value>
  </data>
  <data name="SongSearch_Search_Tags_MapStyle_Tech" xml:space="preserve">
    <value>Tech</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle" xml:space="preserve">
    <value>Tags (Song-Style)</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyleClassicalOrchestral" xml:space="preserve">
    <value>Classical &amp; Orchestral</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyleHipHopRap" xml:space="preserve">
    <value>Hip Hop &amp; Rap</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyleKidsFamily" xml:space="preserve">
    <value>Kids &amp; Family</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Alternative" xml:space="preserve">
    <value>Alternative</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Ambient" xml:space="preserve">
    <value>Ambient</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Anime" xml:space="preserve">
    <value>Anime</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_ComedyMeme" xml:space="preserve">
    <value>Comedy &amp; Meme</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Dance" xml:space="preserve">
    <value>Dance</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_DrumAndBass" xml:space="preserve">
    <value>Drum and Bass</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Dubstep" xml:space="preserve">
    <value>Dubstep</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Electronic" xml:space="preserve">
    <value>Electronic</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_FoldAcoustic" xml:space="preserve">
    <value>Folk &amp; Acoustic</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_FunkDisco" xml:space="preserve">
    <value>Funk &amp; Disco</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Hardcore" xml:space="preserve">
    <value>Hardcore</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Holiday" xml:space="preserve">
    <value>Holiday</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_House" xml:space="preserve">
    <value>House</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Indie" xml:space="preserve">
    <value>Indie</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Instrumental" xml:space="preserve">
    <value>Instrumental</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Jazz" xml:space="preserve">
    <value>Jazz</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_JPop" xml:space="preserve">
    <value>J-Pop</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_JRock" xml:space="preserve">
    <value>J-Rock</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_KPop" xml:space="preserve">
    <value>K-Pop</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Metal" xml:space="preserve">
    <value>Metal</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Nightcore" xml:space="preserve">
    <value>Nightcore</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Pop" xml:space="preserve">
    <value>Pop</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Punk" xml:space="preserve">
    <value>Punk</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_RB" xml:space="preserve">
    <value>R&amp;B</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Rock" xml:space="preserve">
    <value>Rock</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Soul" xml:space="preserve">
    <value>Soul</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Speedcore" xml:space="preserve">
    <value>Speedcore</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Swing" xml:space="preserve">
    <value>Swing</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Techno" xml:space="preserve">
    <value>Techno</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Trance" xml:space="preserve">
    <value>Trance</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_TVFilm" xml:space="preserve">
    <value>TV &amp; Film</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_VideoGame" xml:space="preserve">
    <value>Video Game</value>
  </data>
  <data name="SongSearch_Search_Tags_SongStyle_Vocaloid" xml:space="preserve">
    <value>Vocaloid</value>
  </data>
  <data name="SongSearch_Search_ToolTip" xml:space="preserve">
    <value>Searches for songs</value>
  </data>
  <data name="SongSearch_Search_Watermark" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Workspace_CustomLevels_ColumnHeader_Artist" xml:space="preserve">
    <value>Artist</value>
    <comment>Header text for Artist column</comment>
  </data>
  <data name="Workspace_CustomLevels_ColumnHeader_BSR" xml:space="preserve">
    <value>BSR</value>
    <comment>Header text for BSR column</comment>
  </data>
  <data name="Workspace_CustomLevels_ColumnHeader_ChangeDate" xml:space="preserve">
    <value>Download Date</value>
    <comment>Header text for Download Date column</comment>
  </data>
  <data name="Workspace_CustomLevels_ColumnHeader_E" xml:space="preserve">
    <value>E</value>
    <comment>Header text for Easy column</comment>
  </data>
  <data name="Workspace_CustomLevels_ColumnHeader_Ex" xml:space="preserve">
    <value>Ex</value>
    <comment>Header text for Expert column</comment>
  </data>
  <data name="Workspace_CustomLevels_ColumnHeader_ExPlus" xml:space="preserve">
    <value>Ex+</value>
    <comment>Header text for Export+ column</comment>
  </data>
  <data name="Workspace_CustomLevels_ColumnHeader_H" xml:space="preserve">
    <value>H</value>
    <comment>Header text for Hard column</comment>
  </data>
  <data name="Workspace_CustomLevels_ColumnHeader_Mapper" xml:space="preserve">
    <value>Mapper</value>
    <comment>Header text for Mapper column</comment>
  </data>
  <data name="Workspace_CustomLevels_ColumnHeader_N" xml:space="preserve">
    <value>N</value>
    <comment>Header text for Normal column</comment>
  </data>
  <data name="Workspace_CustomLevels_Command_Delete" xml:space="preserve">
    <value>Deletes the selected custom level</value>
  </data>
  <data name="Workspace_CustomLevels_Command_Refresh" xml:space="preserve">
    <value>Refresh the custom level list</value>
  </data>
  <data name="Workspace_CustomLevels_CulumnHeader_Title" xml:space="preserve">
    <value>Title</value>
    <comment>Header text for Title column</comment>
  </data>
  <data name="Workspace_CustomLevels_Detail_Artist" xml:space="preserve">
    <value>Artist</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_BeatsPerMinute" xml:space="preserve">
    <value>Beats per minute</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_BSR" xml:space="preserve">
    <value>BSR (ID)</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_Command_CopyBsrKey_Tooltip" xml:space="preserve">
    <value>Copy the bsr key. Can be used to request the map in Twitch.</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_Difficulties" xml:space="preserve">
    <value>Difficulties</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_Downvotes" xml:space="preserve">
    <value>Downvotes</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_Duration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_Mapper" xml:space="preserve">
    <value>Mapper</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_NoDescription" xml:space="preserve">
    <value>No description available</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_Qualified" xml:space="preserve">
    <value>Qualified</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_Ranked" xml:space="preserve">
    <value>Ranked</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_Score" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_Seconds" xml:space="preserve">
    <value>Seconds</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_SongName" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_SongSubName" xml:space="preserve">
    <value>Subtitle</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_Title" xml:space="preserve">
    <value>Song Detail</value>
    <comment>Title for the detail area on the custom levels workspace</comment>
  </data>
  <data name="Workspace_CustomLevels_Detail_Uploaded" xml:space="preserve">
    <value>Uploaded</value>
  </data>
  <data name="Workspace_CustomLevels_Detail_Upvotes" xml:space="preserve">
    <value>Upvotes</value>
  </data>
  <data name="Workspace_CustomLevels_OpenPathInFileExplorer" xml:space="preserve">
    <value>Open path in file explorer</value>
  </data>
  <data name="Workspace_CustomLevels_Title" xml:space="preserve">
    <value>Custom Levels</value>
    <comment>Title for the list area on the custom levels workspace</comment>
  </data>
  <data name="Workspace_Playlists_AddFolderCommand" xml:space="preserve">
    <value>Add folder</value>
  </data>
  <data name="Workspace_Playlists_AddPlaylistCommand" xml:space="preserve">
    <value>Add playlist</value>
  </data>
  <data name="Workspace_Playlists_OpenPathInFileExplorer" xml:space="preserve">
    <value>Open path in file explorer</value>
  </data>
  <data name="Workspace_Playlists_Title" xml:space="preserve">
    <value>Playlists</value>
  </data>
  <data name="Workspace_Playlist_AddCustomLevel" xml:space="preserve">
    <value>Adds the song to the selected playlist</value>
  </data>
  <data name="Workspace_Playlist_ColumnHeader_Difficultiy" xml:space="preserve">
    <value>Difficulty</value>
  </data>
  <data name="Workspace_Playlist_RemoveSongFromPlaylist_ToolTip" xml:space="preserve">
    <value>Remove song from playlist</value>
  </data>
  <data name="Workspace_Playlist_SavePlaylistWithSongOrder" xml:space="preserve">
    <value>Save playlist with the current song order</value>
  </data>
</root>